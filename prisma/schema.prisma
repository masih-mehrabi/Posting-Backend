// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id       Int       @id @default(autoincrement())
  title    String
  body     String
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
  comments Comment[]
  likes PostLike[]
}

model User {
  id        Int       @id @default(autoincrement())
  fullName  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  hash      String
  post      Post[]
  comments  Comment[]
  postLikes     PostLike[]
  commentLike CommentLike[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
  parent    Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  parentId  Int?
  children  Comment[] @relation("ParentChild")
  likes     CommentLike[]
}

model PostLike {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int
  postId Int

  @@id([userId, postId])
}

model CommentLike {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    Int
  commentId Int
  @@id([userId, commentId])
}
